#!/usr/bin/env node

var fs = require('fs');
var path = require('path');


// Ignore this block, it's pure magic, temporary fix
// for https://github.com/nodejs/node/issues/6456
[process.stdout, process.stderr].forEach(function (s) {
  s && s.isTTY && s._handle && s._handle.setBlocking && s._handle.setBlocking(true);
});


var CLI = require('../lib/CLI');


var dreddCli = new CLI({
  custom: {
    cwd: process.cwd(),
    argv: process.argv.slice(2)
  }
});


if (process.env.COVERAGE_DIR) {
  process.on('exit', function () {
    // Before Dredd exits, we need to collect coverage stats and save them to
    // a file. We abuse 'mocha-lcov-reporter' to do this.
    var LCov = require('mocha-lcov-reporter');

    // Pretending there is Mocha runner
    var EventEmitter = require('events').EventEmitter;
    var runner = new EventEmitter();

    // Monkey-patching 'LCov.prototype.write' to catch all output to a variable
    var content = '';
    var write = LCov.prototype.write;

    LCov.prototype.write = function(string) {
      content += string;
    }

    // Collecting the stats
    new LCov(runner);
    runner.emit('end');

    // Undo the monkey-patching
    LCov.prototype.write = write;

    // Save stats as lcov file
    var file = path.join(process.env.COVERAGE_DIR, 'dredd-bin.info');
    fs.appendFileSync(file, content);
  })
}


dreddCli.run();
