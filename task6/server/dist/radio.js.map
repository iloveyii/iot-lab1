{"version":3,"sources":["../src/radio.js"],"names":["Thingy","require","icecast","lame","util","url","this_thingy","speaker_configured","ready_to_send","audio_buffer_size","audio_buffer","Buffer","audio_buffer_tail","audio_buffer_head","buffer_status","sendIntervalId","convertAndBuffer","data","index","length","sample_16","readInt16LE","console","log","sample_8","parseInt","writeUInt8","sendAudio","ble_packet_size","ble_packet","sample","readUInt8","speaker_pcm_write","error","decoder_8kHz","Decoder","on","format","decoder","encoder","Encoder","channels","bitDepth","sampleRate","bitRate","outSampleRate","mode","MONO","pipe","onSpeakerStatus","status","onDiscover","thingy","speaker_mode_set","speaker_status_enable","get","res","write","metadata","track","parse","StreamTitle","setInterval","stopRadio","clearInterval","speaker_status_disable","module","exports","startRadio"],"mappings":"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","sourcesContent":["/*\n  Copyright (c) 2010 - 2017, Nordic Semiconductor ASA\n  All rights reserved.\n  Redistribution and use in source and binary forms, with or without modification,\n  are permitted provided that the following conditions are met:\n  1. Redistributions of source code must retain the above copyright notice, this\n     list of conditions and the following disclaimer.\n  2. Redistributions in binary form, except as embedded into a Nordic\n     Semiconductor ASA integrated circuit in a product or a software update for\n     such product, must reproduce the above copyright notice, this list of\n     conditions and the following disclaimer in the documentation and/or other\n     materials provided with the distribution.\n  3. Neither the name of Nordic Semiconductor ASA nor the names of its\n     contributors may be used to endorse or promote products derived from this\n     software without specific prior written permission.\n  4. This software, with or without modification, must only be used with a\n     Nordic Semiconductor ASA integrated circuit.\n  5. Any software provided in binary form under this license must not be reverse\n     engineered, decompiled, modified and/or disassembled.\n  THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA \"AS IS\" AND ANY EXPRESS\n  OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n  OF MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE\n  DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE\n  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\n  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n  OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar Thingy = require('thingy52');\nvar icecast = require(\"icecast\");\nvar lame = require(\"lame\");\nvar util = require('util');\n\n//var url = 'http://stream.bauermedia.no:80/radiorock.mp3'\n//var url = 'http://stream.p4.no/nrj_mp3_hq?TuneIn'\nvar url = 'http://lyd.nrk.no:80/nrk_radio_p3_mp3_h';\n\nvar this_thingy;\nvar speaker_configured = false;\nvar ready_to_send = true;\n\nvar audio_buffer_size = 1000000;\nvar audio_buffer = new Buffer(audio_buffer_size);\nvar audio_buffer_tail = 0;\nvar audio_buffer_head = 0;\n\nvar buffer_status = 0;\n\nvar sendIntervalId = null;\n\nfunction convertAndBuffer(data) {\n    if (speaker_configured) {\n        var index = 0;\n\n        for (index = 0; index < data.length - 1; index += 2) {\n            var sample_16 = data.readInt16LE(index);\n\n            if (((audio_buffer_tail + 1) % audio_buffer_size) == audio_buffer_head) {\n                console.log('Audio buffer full!')\n            } else {\n                // Convert to unsigned 8 bit.\n                var sample_8 = parseInt((((sample_16 * 125.0) / 32768.0) + 125.0), 10);\n                audio_buffer.writeUInt8(sample_8, audio_buffer_tail);\n                audio_buffer_tail = (audio_buffer_tail + 1) % audio_buffer_size;\n            }\n        }\n    }\n}\n\nfunction sendAudio() {\n\n    if (audio_buffer_head == audio_buffer_tail) {\n    } else {\n        if (((buffer_status == 0) || (buffer_status == 2)) && ready_to_send) {\n            ready_to_send = false;\n            var ble_packet_size = 23 * 6 - 3;\n            var ble_packet = new Buffer(ble_packet_size);\n            var index = 0;\n\n            for (index = 0; index < ble_packet_size; index++) {\n                var sample = audio_buffer.readUInt8(audio_buffer_head);\n                ble_packet.writeUInt8(sample, index);\n                audio_buffer_head = (audio_buffer_head + 1) % audio_buffer_size;\n                if (audio_buffer_head == audio_buffer_tail) {\n                    console.log('Audio buffer empty');\n                    break;\n                }\n            }\n            this_thingy.speaker_pcm_write(ble_packet, function (error) {\n                ready_to_send = true;\n            });\n        } else {\n        }\n    }\n}\n\nvar decoder_8kHz = lame.Decoder();\ndecoder_8kHz.on('format', function (format) {\n    console.log(util.format('Decoder_8k Format: %j', format));\n});\n\ndecoder_8kHz.on(\"data\", function (data) {\n    convertAndBuffer(data);\n});\n\nvar decoder = lame.Decoder();\ndecoder.on('format', function (format) {\n    console.log(util.format('Decoder Format: %j', format));\n    console.log()\n    var encoder = lame.Encoder({\n        channels: format.channels,\n        bitDepth: format.bitDepth,\n        sampleRate: format.sampleRate,\n        bitRate: 128,\n        outSampleRate: 8000,\n        mode: lame.MONO\n    });\n    decoder.pipe(encoder).pipe(decoder_8kHz);\n});\n\nfunction onSpeakerStatus(status) {\n    buffer_status = status;\n}\n\nfunction onDiscover(thingy) {\n    audio_buffer = new Buffer(audio_buffer_size);\n    audio_buffer_head = 0;\n    console.log('Discovered: ' + thingy);\n    this_thingy = thingy;\n\n    thingy.on('disconnect', function () {\n        console.log('Disconnected!');\n    });\n\n    thingy.on('speakerStatusNotif', onSpeakerStatus);\n\n    thingy.speaker_mode_set(2, function (error) {\n        console.log('Speaker configure! ' + ((error) ? error : ''));\n        speaker_configured = true;\n    });\n\n    thingy.speaker_status_enable(function (error) {\n        console.log('Speaker status start! ' + ((error) ? error : ''));\n        icecast.get(url, function (res) {\n            res.on('data', function (data) {\n                decoder.write(data);\n            });\n            res.on('metadata', function (metadata) {\n                var track = icecast.parse(metadata).StreamTitle;\n                console.log(track);\n            });\n        });\n\n        sendIntervalId = setInterval(sendAudio, 7);\n    });\n}\n\nfunction stopRadio(thingy) {\n    clearInterval(sendIntervalId);\n    thingy.speaker_status_disable(function (error) {\n        if(error) {\n            console.log('An error occurred in disabling speaker');\n        }\n    });\n}\n\nmodule.exports = {\n    startRadio : onDiscover,\n    stopRadio : stopRadio\n};\n"],"file":"radio.js"}